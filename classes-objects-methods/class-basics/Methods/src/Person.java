public class Person {    public static double PI = 3.14;    public static int[] nums =initNums();    static {        nums = new int[5];        nums[0] = 1;        nums[1] = 2;        nums[2] = 3;        nums[3] = 4;    }    private String middleName = "James";    //THis is the better approach for Static Initializers    public static int[] initNums(){        int[] nums = new int[5];        nums[0] = 1;        nums[1] = 2;        nums[2] = 3;        nums[3] = 4;        return nums;    }    public static void main(String[] args) {        Person p1 = new Person();        p1.sayHello();        p1.saySomething("Welcome to my Nightmare");        p1.saySomething("I have become comfortably numb");        System.out.println(p1.getMiddleInitial());        System.out.println(p1.add(10, 20));        System.out.println(PI);//        p1.test(new String[]{"one","two","three"});        String[] words = new String[]{"one", "two", "three"};        p1.test(1, 2, words);        // Varargs - the vararg part has to be the last in the list        p1.test2(1, 2, "one", "two", "three");    }    public int add(int num1, int num2) {        return num1 + num2;    }    public void sayHello() {        System.out.println("Hello");    }    public void saySomething(String message) {        System.out.println(message);    }    public char getMiddleInitial() {        return middleName.charAt(0);    }    // Varargs    public void test(int num1, int num2, String[] words) {        // do something clever with words    }    public void test2(int num1, int num2, String... words) {        // do something clever        System.out.println(words[1]);    }}